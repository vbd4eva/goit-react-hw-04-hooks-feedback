{"version":3,"sources":["components/Feedback/Section/Header/Header.js","components/Feedback/Section/Section.js","components/Feedback/FeedbackOptions/FeedbackOptions.js","components/Feedback/Statistics/Statistics.js","components/Feedback/Notification/Notification.js","components/Feedback/Feedback.js","App.js","index.js","components/Feedback/Statistics/Statistics.module.css","components/Feedback/Section/Section.module.css","components/Feedback/FeedbackOptions/FeedbackOptions.module.css"],"names":["Header","title","rank","titleEl","React","createElement","className","defaultProps","propTypes","PropTypes","string","isRequired","Section","headerRank","children","s","section","FeedbackOptions","options","onLeaveFeedback","map","btnAtrName","btn","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","container","class","results","value","Notification","message","Feedback","useState","setGood","setNeutral","feedbackRange","Object","keys","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","e","actionedBtnName","target","setState","prevState","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b2a80270.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Header({title, rank})\r\n{\r\n      const titleEl = React.createElement('h'+rank, { className: 'h'+rank }, title);\r\n    return (\r\n        <>\r\n            {titleEl}\r\n        </>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    rank: 2,\r\n}\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    rank: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Header from './Header/Header'\r\nimport s from \"./Section.module.css\"\r\n\r\n\r\n\r\nfunction Section({ title, headerRank, children }) {\r\n    return (\r\n        <section className={s.section}>\r\n            <Header title={title} rank={headerRank} />            \r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Section\r\n\r\n","import PropTypes from 'prop-types'\r\nimport s from './FeedbackOptions.module.css'\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n    \r\n    return (\r\n        <div>\r\n            {options.map(btnAtrName => (\r\n                <button className={s.btn} key={btnAtrName} name={btnAtrName} onClick={onLeaveFeedback}>{btnAtrName}</button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./Statistics.module.css\";   \r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n                <div className={s.container}>\r\n                    <div class={s.results}>\r\n                         <p className={s.name}>Good: <span className={s.value}>{good}</span></p>\r\n                         <p className={s.name}>Neutral: <span className={s.value}>{neutral}</span></p>\r\n                         <p className={s.name}>Bad: <span className={s.value}>{bad}</span></p>\r\n                    </div>\r\n                    <p className={s.total}>Total: <span className={s.value}>{total}</span></p>\r\n                    {(!good) || (<p className={s.positivePercentage}>Positive feedback: <span className={s.value}>{positivePercentage}</span>%</p>)}\r\n                </div>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p className=\"messageNotification\">\r\n            {message}\r\n        </p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification\r\n\r\n","import { useState} from 'react';\r\n\r\nimport Section from './Section/Section';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Notification from './Notification/Notification';\r\n\r\nconst Feedback = () => {\r\n\r\n    const [good, setGood] = useState(0);\r\n    const [neutral, setNeutral] = useState(0);\r\n    const [bad, setBad] = useState(0);\r\n\r\n    // state helpful logic\r\n    const feedbackRange = {\r\n        \"good\": setGood,\r\n        \"neutral\": setNeutral,\r\n        \"bad\": setBad\r\n    };\r\n    const options = Object.keys(feedbackRange);\r\n\r\n\r\n    // calculating data logic\r\n    const countTotalFeedback = good + neutral + bad;\r\n    // const tolalFeedbacks = countTotalFeedback();\r\n    const countPositiveFeedbackPercentage =  Math.round((good * 100) / countTotalFeedback);\r\n    // const positiveFeedbackPercentage = countPositiveFeedbackPercentage();\r\n\r\n\r\n    // UX logic\r\n    const voteFeedback = (e) => {\r\n\r\n        const actionedBtnName = e.target.name;\r\n        const setState = feedbackRange[actionedBtnName];\r\n\r\n        setState(prevState => prevState + 1);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n                <Section title=\"Please leave feedback\" headerRank=\"1\">\r\n                    <FeedbackOptions options={options} onLeaveFeedback={voteFeedback}></FeedbackOptions>\r\n                </Section>\r\n\r\n                <Section title=\"Statistic\" headerRank=\"2\">\r\n                    {\r\n                    (countTotalFeedback > 0)\r\n                        ?\r\n                         <Statistics good={good} neutral={neutral} bad={bad} total={countTotalFeedback} positivePercentage={countPositiveFeedbackPercentage}></Statistics>\r\n                        :\r\n                        <Notification message=\"No feedback given\" />\r\n                    }\r\n                </Section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Feedback;","import Feedback from './components/Feedback';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__2cmS9\",\"positivePercentage\":\"Statistics_positivePercentage__1ii-c\",\"results\":\"Statistics_results__30DcC\",\"value\":\"Statistics_value__39mWR\",\"total\":\"Statistics_total__KiwL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__YsQyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__24hyJ\"};"],"sourceRoot":""}